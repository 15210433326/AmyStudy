 正则表达式
====
#### 正则表达式
  * Regular Expression
    使用字符串描述或者匹配一系列某些规则 的字符串
  * 是一个字符串
  * 去匹配另一个字符串
  * 例如:  \bis\b 匹配单词is  而不是字符串is

#### 语法
  * \b  代表词边界
  * \d  表示数字
  * {num}  表示量词  例如 {4}  表示前面的东西有四个   \d{4}代表有四个数字
  * ^ 表示开头
  * $ 表示结尾
  * []  表示或
  * .表示任意字符
  * \ 代表转义
  * + 代表至少有一个
  * \s 表示空白符
  * g 表示全局搜索
  * () 分组
  *  *代表出现 任意次



  /(^\s*)|(\s*$)/g  代表从头到
  ^\d{4}[/-]\d{2}[/-]\d{2}$
  ^http:\/\/.+\.jpg$
  * https 是加密了传输

####  正则表达式图形化
    http://regexper.com


#### js中使用正则表达式
  1. Reg对象  创建方式
    * var reg = /正则表达式/；
    * var reg = new RegExp('正则表达式')
  2. 使用方式  配合字符串相关方法
     1. str.replace(reg,'最终值');
     2. str.search()   忽略全局
     3. match
  * Reg 对象上的方法
    1. Reg.exec()
      * 没有匹配，返回 null
      * 匹配成功，返回数组
    2. Reg.test()  避免使用全局g
      * 返回  true 和 false


      /\d{5,10}/
      reg.test(str)
